AWSTemplateFormatVersion: "2010-09-09"

Description: This is a template for VPC

Parameters:
  VpcCIDR:
    Type: String
    Default: 10.0.0.0/16
    Description: Enter the VPC CIDR

  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t3.micro
      - t2.micro

Mappings:
  AmiMapping:
    us-east-1:
      AmiId: ami-0c101f26f147fa7fd
    us-west-2:
      AmiId: ami-0a70b9d193ae8a799

Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: owner
          Value: Nargis-vpc

  pubSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: vpc-0fb9d1e842c37ffed
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "us-east-1a"
      Tags:
        - Key: owner
          Value: nargis-pubsub1

  pubSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: vpc-0fb9d1e842c37ffed
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: "us-east-1b"
      Tags:
        - Key: owner
          Value: nargis-pubsub2

  privSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: vpc-0fb9d1e842c37ffed
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: "us-east-1a"
      Tags:
        - Key: owner
          Value: nargis-privsub1

  privSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: "us-east-1b"
      Tags:
        - Key: owner
          Value: nargis-privsub2

  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: owner
          Value: nargis-igw

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: vpc-0fb9d1e842c37ffed
      InternetGatewayId: !Ref myInternetGateway

  pubRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: vpc-0fb9d1e842c37ffed
      Tags:
        - Key: owner
          Value: nargis-rt

  pubRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref pubRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myInternetGateway

  pubSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref pubSubnet1
      RouteTableId: !Ref pubRouteTable

  pubSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref pubSubnet2
      RouteTableId: !Ref pubRouteTable

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !Ref myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: MyLaunchTemplate
      LaunchTemplateData:
        ImageId: !FindInMap [AmiMapping, !Ref "AWS::Region", AmiId]
        InstanceType: !Ref InstanceType
        SecurityGroupIds:
          - !GetAtt InstanceSecurityGroup.GroupId
        TagSpecifications:
          - ResourceType: launch-template
            Tags:
              - Key: owner
                Value: nargis
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y
            yum install httpd -y
            systemctl start httpd
            systemctl enable httpd
            echo "<h1>Welcome to My Apache Web Server! My name is Nargis</h1>" > /var/www/html/index.html

  MyALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      Subnets:
        - !Ref pubSubnet1
        - !Ref pubSubnet2

  # Target Group for the ALB
  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: vpc-0fb9d1e842c37ffed
      Targets: [] # Initially empty, filled by ASG

  # Auto Scaling Group
  MyASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: "Latest" # Use the latest version of the Launch Template
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      VPCZoneIdentifier:
        - !Ref pubSubnet1
        - !Ref pubSubnet2
      TargetGroupARNs:
        - !Ref MyTargetGroup

Outputs:
  ALBEndpoint:
    Description: URL of the Application Load Balancer
    Value: !GetAtt MyALB.DNSName
